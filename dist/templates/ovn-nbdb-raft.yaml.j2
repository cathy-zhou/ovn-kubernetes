# headless service to export the OVN NB DB Pods and also provides the
# network domain of the statefulset pods
apiVersion: v1
kind: Service
metadata:
  name: ovn-nbdb
  namespace: ovn-kubernetes
spec:
  ports:
    - name: north
      port: {{ ovn_nb_port }}
      protocol: TCP
      targetPort: {{ ovn_nb_port }}
  sessionAffinity: None
  clusterIP: None
  type: ClusterIP

---
# ovn-nbdb-raft-pdb PodDisruptionBudget ensures that the number of replicas running is never brought
# below the number needed for a quorum, by default 2 for a cluster of size 3. So, it ensures that we
# keep a raft quorum.
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: ovn-nbdb-raft-pdb
  namespace: ovn-kubernetes
spec:
  minAvailable: {{ ovn_db_minAvailable | default(2) }}
  selector:
    matchLabels:
      name: ovn-nbdb

---
# ovn-nbdb raft statefulset starts ovn NB daemon in a container configured to run in
# RAFT mode
kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: ovn-nbdb
  namespace: ovn-kubernetes
  annotations:
    kubernetes.io/description: |
      This statefulset launches the OVN Northbound Database raft cluster.
spec:
  serviceName: ovn-nbdb
  podManagementPolicy: "Parallel"
  replicas: {{ ovn_db_replicas | default(3) }}
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      name: ovn-nbdb
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      partition: 0
  template:
    metadata:
      labels:
        name: ovn-nbdb
        component: network
        type: infra
        kubernetes.io/os: "linux"
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ''
    spec:
      terminationGracePeriodSeconds: 30
      imagePullSecrets:
        - name: ovncni-quay-ips
      serviceAccountName: ovn
      hostNetwork: true
      priorityClassName: "system-cluster-critical"

      # required to be scheduled on node with k8s.ovn.org/ovnkube-db=true label but can
      # only have one instance per node
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                - key: k8s.ovn.org/ovnkube-db
                  operator: In
                  values:
                    - "true"
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: name
                    operator: In
                    values:
                      - ovn-nbdb
              topologyKey: kubernetes.io/hostname

      containers:
        # nbdb - v3
        - name: nbdb
          image: "{{ ovn_image | default('docker.io/ovnkube/ovn-daemonset:latest') }}"
          imagePullPolicy: "{{ ovn_image_pull_policy | default('IfNotPresent') }}"
          command: ["/root/ovnkube.sh", "nb-ovsdb-raft"]

          readinessProbe:
            exec:
              command: ["/usr/bin/ovn-kube-util", "readiness-probe", "-t", "ovnnb-db-raft"]
            initialDelaySeconds: 30
            timeoutSeconds: 30
            periodSeconds: 60

          securityContext:
            runAsUser: 0
            capabilities:
              add: ["NET_ADMIN", "SYS_NICE"]

          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            # ovn db is stored in the pod in /etc/openvswitch
            # (or in /etc/ovn if OVN from new repository is used)
            # and on the host in /var/lib/openvswitch/
            - mountPath: /etc/openvswitch/
              name: host-var-lib-ovs
            - mountPath: /etc/ovn/
              name: host-var-lib-ovs
            - mountPath: /var/log/openvswitch/
              name: host-var-log-ovs
            - mountPath: /var/log/ovn/
              name: host-var-log-ovs
            - mountPath: /var/run/openvswitch/
              name: host-var-run-ovs
            - mountPath: /var/run/ovn/
              name: host-var-run-ovs
            - mountPath: /ovn-cert
              name: host-ovn-cert
              readOnly: true

          resources:
            requests:
              cpu: 100m
              memory: 300Mi
          env:
            - name: OVN_DAEMONSET_VERSION
              value: "3"
            - name: OVN_LOGLEVEL_NB
              value: "{{ ovn_loglevel_nb }}"
            - name: OVN_NORTHD_PROBE_INTERVAL
              value: "50000"
            - name: K8S_APISERVER
              valueFrom:
                configMapKeyRef:
                  name: ovn-config
                  key: k8s_apiserver
            - name: OVN_KUBERNETES_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: K8S_NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: OVN_SSL_ENABLE
              value: "{{ ovn_ssl_en }}"
            - name: OVN_NB_RAFT_ELECTION_TIMER
              value: "5000"
            - name: OVN_NB_PORT
              value: "{{ ovn_nb_port }}"
            - name: OVN_NB_RAFT_PORT
              value: "{{ ovn_nb_raft_port }}"
      # end of container

      volumes:
        - name: host-var-log-ovs
          hostPath:
            path: /var/log/openvswitch
        - name: host-var-lib-ovs
          hostPath:
            path: /var/lib/openvswitch
        - name: host-var-run-ovs
          hostPath:
            path: /var/run/openvswitch
        - name: host-ovn-cert
          hostPath:
            path: /etc/ovn
            type: DirectoryOrCreate
      tolerations:
        - operator: "Exists"
